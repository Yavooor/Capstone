version: 2.1
orbs:
  python: circleci/python@1.5.0

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Make
          command: |
            python3 -m venv venv
            . venv/bin/activate && make install
      - run:
          name: Lint with pylint and hadolint
          command: . venv/bin/activate && make lint
          
  DeployDocker:
    docker:  
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build Tag and Push Docker
          command: chmod 755 run_docker.sh && ./run_docker.sh
          
  CreateEKSCluster:
    docker:  
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create EKS Cluster
          command: |
            sudo curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl create cluster --name capstone --region=us-east-1 && \
            eksctl utils describe-stacks --region=us-east-1 --cluster=capstone && \
            eksctl get cluster --name=capstone --region=us-east-1
          
          
  Kubes:
    docker:  
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - run:
          name: install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
            chmod +x ./kubectl && \
            sudo mv ./kubectl /usr/local/bin/kubectl && \
            kubectl version --client
      - run:
          name: run kubernetes
          command: chmod 755 run_kubernetes.sh && ./run_kubernetes.sh
          
  CheckConnection: 
    docker:  
      - image: circleci/python:3.6.7-stretch
    steps:
      - checkout
      - run:
          name: Check connection
          command: curl localhost:8080
          
  Cleanup: 
    docker:  
      - image: cimg/base:2022.06
    steps:
      - checkout
      - run:
          name: Cleanup
          command: docker system prune -f
      
workflows:
  WFlow: 
    jobs:
      - build-and-test 
      - DeployDocker:
          requires: [build-and-test]
      - CreateEKSCluster:
          requires: [DeployDocker]
      - Kubes:
          requires: [CreateEKSCluster]
      - CheckConnection:
          requires: [Kubes]
      - Cleanup:
          requires: [CheckConnection]
